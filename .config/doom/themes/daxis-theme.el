(deftheme daxis
  "Created 2025-08-07.")

(custom-theme-set-faces
 'daxis
 '(default ((t (:family "default" :foundry "default" :width normal :height 1 :weight normal :slant normal :underline nil :overline nil :extend nil :strike-through nil :box nil :inverse-video nil :foreground "#a9b1d6" :background "#000000" :stipple nil :inherit nil))))
 '(cursor ((t (:background "#b4f9f8"))))
 '(fixed-pitch ((t (:family "Monospace"))))
 '(variable-pitch ((((type w32)) (:foundry "outline" :family "Arial")) (t (:family "Sans Serif"))))
 '(escape-glyph ((t (:foreground "#b4f9f8"))))
 '(homoglyph ((((background dark)) (:foreground "cyan")) (((type pc)) (:foreground "magenta")) (t (:foreground "brown"))))
 '(minibuffer-prompt ((t (:foreground "#b4f9f8"))))
 '(highlight ((t (:foreground "#414868" :background "#b4f9f8"))))
 '(region ((t (:extend t :background "#414868"))))
 '(shadow ((t (:foreground "#9099c0"))))
 '(secondary-selection ((t (:extend t :background "#8189af"))))
 '(trailing-whitespace ((t (:background "#f7768e"))))
 '(font-lock-bracket-face ((t (:inherit (font-lock-punctuation-face)))))
 '(font-lock-builtin-face ((t (:foreground "#f7768e"))))
 '(font-lock-comment-delimiter-face ((default (:inherit (font-lock-comment-face)))))
 '(font-lock-comment-face ((t (:foreground "#51587a"))))
 '(font-lock-constant-face ((t (:foreground "#ff9e64"))))
 '(font-lock-delimiter-face ((t (:inherit (font-lock-punctuation-face)))))
 '(font-lock-doc-face ((t (:foreground "#7c819b" :inherit (font-lock-comment-face)))))
 '(font-lock-doc-markup-face ((t (:inherit (font-lock-constant-face)))))
 '(font-lock-escape-face ((t (:inherit (font-lock-regexp-grouping-backslash)))))
 '(font-lock-function-call-face ((t (:inherit (font-lock-function-name-face)))))
 '(font-lock-function-name-face ((t (:foreground "#7aa2f7"))))
 '(font-lock-keyword-face ((t (:foreground "#bb9af7"))))
 '(font-lock-negation-char-face ((t (:foreground "#7dcfff" :inherit (bold)))))
 '(font-lock-number-face ((t (:foreground "#ff9e64"))))
 '(font-lock-misc-punctuation-face ((t (:inherit (font-lock-punctuation-face)))))
 '(font-lock-operator-face ((t nil)))
 '(font-lock-preprocessor-face ((t (:foreground "#7dcfff" :inherit (bold)))))
 '(font-lock-property-name-face ((t (:inherit (font-lock-variable-name-face)))))
 '(font-lock-property-use-face ((t (:inherit (font-lock-property-name-face)))))
 '(font-lock-punctuation-face ((t nil)))
 '(font-lock-regexp-grouping-backslash ((t (:foreground "#7dcfff" :inherit (bold)))))
 '(font-lock-regexp-grouping-construct ((t (:foreground "#7dcfff" :inherit (bold)))))
 '(font-lock-string-face ((t (:foreground "#9ece6a"))))
 '(font-lock-type-face ((t (:foreground "#c0caf5"))))
 '(font-lock-variable-name-face ((t (:foreground "#c0caf5"))))
 '(font-lock-variable-use-face ((t (:inherit (font-lock-variable-name-face)))))
 '(font-lock-warning-face ((t (:inherit (warning)))))
 '(button ((t (:inherit (link)))))
 '(link ((t (:weight bold :underline (:color foreground-color :style line :position nil) :foreground "#b4f9f8"))))
 '(link-visited ((default (:inherit (link))) (((class color) (background light)) (:foreground "magenta4")) (((class color) (background dark)) (:foreground "violet"))))
 '(fringe ((t (:foreground "#8189af" :inherit (default)))))
 '(header-line ((t (:inherit (mode-line)))))
 '(tooltip ((t (:foreground "#a9b1d6" :background "#1a1b26"))))
 '(mode-line ((t (:foreground "#ffffff" :background "#1a1b26"))))
 '(mode-line-buffer-id ((t (:foreground "#b4f9f8"))))
 '(mode-line-emphasis ((t (:foreground "#b4f9f8"))))
 '(mode-line-highlight ((((supports :box t) (class color grayscale) (min-colors 88)) (:box (:line-width (2 . 2) :color "grey40" :style released-button))) (t (:inherit (highlight)))))
 '(mode-line-inactive ((t (:foreground "#9099c0" :background "#000000"))))
 '(isearch ((t (:weight bold :inherit (lazy-highlight)))))
 '(isearch-fail ((t (:weight bold :foreground "#414868" :background "#f7768e"))))
 '(lazy-highlight ((t (:weight bold :foreground "#c0caf5" :background "#7eaead"))))
 '(match ((t (:weight bold :foreground "#73daca" :background "#414868"))))
 '(next-error ((t (:inherit (region)))))
 '(query-replace ((t (:inherit (isearch))))))

(provide-theme 'daxis)
